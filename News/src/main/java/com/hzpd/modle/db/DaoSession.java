package com.hzpd.modle.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userLogDaoConfig;
    private final DaoConfig albumBeanDBDaoConfig;
    private final DaoConfig albumItemBeanDBDaoConfig;
    private final DaoConfig newsBeanDBDaoConfig;
    private final DaoConfig newsChannelBeanDBDaoConfig;
    private final DaoConfig pushBeanDBDaoConfig;
    private final DaoConfig videoItemBeanDbDaoConfig;
    private final DaoConfig zhuantiBeanDBDaoConfig;
    private final DaoConfig newsItemBeanForCollectionDaoConfig;
    private final DaoConfig jsonbeanDaoConfig;
    private final DaoConfig newsJumpBeanDaoConfig;
    private final DaoConfig zhuanTiBeanDBDaoConfig;

    private final UserLogDao userLogDao;
    private final AlbumBeanDBDao albumBeanDBDao;
    private final AlbumItemBeanDBDao albumItemBeanDBDao;
    private final NewsBeanDBDao newsBeanDBDao;
    private final NewsChannelBeanDBDao newsChannelBeanDBDao;
    private final PushBeanDBDao pushBeanDBDao;
    private final VideoItemBeanDbDao videoItemBeanDbDao;
    private final ZhuantiBeanDBDao zhuantiBeanDBDao;
    private final NewsItemBeanForCollectionDao newsItemBeanForCollectionDao;
    private final JsonbeanDao jsonbeanDao;
    private final NewsJumpBeanDao newsJumpBeanDao;
    private final ZhuantiBeanDBDao zhuanTiBeanDBDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userLogDaoConfig = daoConfigMap.get(UserLogDao.class).clone();
        userLogDaoConfig.initIdentityScope(type);

        albumBeanDBDaoConfig = daoConfigMap.get(AlbumBeanDBDao.class).clone();
        albumBeanDBDaoConfig.initIdentityScope(type);

        albumItemBeanDBDaoConfig = daoConfigMap.get(AlbumItemBeanDBDao.class).clone();
        albumItemBeanDBDaoConfig.initIdentityScope(type);

        newsBeanDBDaoConfig = daoConfigMap.get(NewsBeanDBDao.class).clone();
        newsBeanDBDaoConfig.initIdentityScope(type);

        newsChannelBeanDBDaoConfig = daoConfigMap.get(NewsChannelBeanDBDao.class).clone();
        newsChannelBeanDBDaoConfig.initIdentityScope(type);

        pushBeanDBDaoConfig = daoConfigMap.get(PushBeanDBDao.class).clone();
        pushBeanDBDaoConfig.initIdentityScope(type);

        videoItemBeanDbDaoConfig = daoConfigMap.get(VideoItemBeanDbDao.class).clone();
        videoItemBeanDbDaoConfig.initIdentityScope(type);

        zhuantiBeanDBDaoConfig = daoConfigMap.get(ZhuantiBeanDBDao.class).clone();
        zhuantiBeanDBDaoConfig.initIdentityScope(type);

        newsItemBeanForCollectionDaoConfig = daoConfigMap.get(NewsItemBeanForCollectionDao.class).clone();
        newsItemBeanForCollectionDaoConfig.initIdentityScope(type);

        jsonbeanDaoConfig = daoConfigMap.get(JsonbeanDao.class).clone();
        jsonbeanDaoConfig.initIdentityScope(type);

        newsJumpBeanDaoConfig = daoConfigMap.get(NewsJumpBeanDao.class).clone();
        newsJumpBeanDaoConfig.initIdentityScope(type);

        zhuanTiBeanDBDaoConfig = daoConfigMap.get(ZhuantiBeanDBDao.class).clone();
        zhuanTiBeanDBDaoConfig.initIdentityScope(type);

        userLogDao = new UserLogDao(userLogDaoConfig, this);
        albumBeanDBDao = new AlbumBeanDBDao(albumBeanDBDaoConfig, this);
        albumItemBeanDBDao = new AlbumItemBeanDBDao(albumItemBeanDBDaoConfig, this);
        newsBeanDBDao = new NewsBeanDBDao(newsBeanDBDaoConfig, this);
        newsChannelBeanDBDao = new NewsChannelBeanDBDao(newsChannelBeanDBDaoConfig, this);
        pushBeanDBDao = new PushBeanDBDao(pushBeanDBDaoConfig, this);
        videoItemBeanDbDao = new VideoItemBeanDbDao(videoItemBeanDbDaoConfig, this);
        zhuantiBeanDBDao = new ZhuantiBeanDBDao(zhuantiBeanDBDaoConfig, this);
        newsItemBeanForCollectionDao = new NewsItemBeanForCollectionDao(newsItemBeanForCollectionDaoConfig, this);
        jsonbeanDao = new JsonbeanDao(jsonbeanDaoConfig, this);
        newsJumpBeanDao = new NewsJumpBeanDao(newsJumpBeanDaoConfig, this);
        zhuanTiBeanDBDao = new ZhuantiBeanDBDao(zhuanTiBeanDBDaoConfig, this);

        registerDao(UserLog.class, userLogDao);
        registerDao(AlbumBeanDB.class, albumBeanDBDao);
        registerDao(AlbumItemBeanDB.class, albumItemBeanDBDao);
        registerDao(NewsBeanDB.class, newsBeanDBDao);
        registerDao(NewsChannelBeanDB.class, newsChannelBeanDBDao);
        registerDao(PushBeanDB.class, pushBeanDBDao);
        registerDao(VideoItemBeanDb.class, videoItemBeanDbDao);
        registerDao(ZhuantiBeanDB.class, zhuantiBeanDBDao);
        registerDao(NewsItemBeanForCollection.class, newsItemBeanForCollectionDao);
        registerDao(Jsonbean.class, jsonbeanDao);
        registerDao(NewsJumpBean.class, newsJumpBeanDao);
    }
    
    public void clear() {
        userLogDaoConfig.getIdentityScope().clear();
        albumBeanDBDaoConfig.getIdentityScope().clear();
        albumItemBeanDBDaoConfig.getIdentityScope().clear();
        newsBeanDBDaoConfig.getIdentityScope().clear();
        newsChannelBeanDBDaoConfig.getIdentityScope().clear();
        pushBeanDBDaoConfig.getIdentityScope().clear();
        videoItemBeanDbDaoConfig.getIdentityScope().clear();
        zhuantiBeanDBDaoConfig.getIdentityScope().clear();
        newsItemBeanForCollectionDaoConfig.getIdentityScope().clear();
        jsonbeanDaoConfig.getIdentityScope().clear();
        newsJumpBeanDaoConfig.getIdentityScope().clear();
        zhuanTiBeanDBDaoConfig.getIdentityScope().clear();
    }

    public UserLogDao getUserLogDao() {
        return userLogDao;
    }

    public AlbumBeanDBDao getAlbumBeanDBDao() {
        return albumBeanDBDao;
    }

    public AlbumItemBeanDBDao getAlbumItemBeanDBDao() {
        return albumItemBeanDBDao;
    }

    public NewsBeanDBDao getNewsBeanDBDao() {
        return newsBeanDBDao;
    }

    public NewsChannelBeanDBDao getNewsChannelBeanDBDao() {
        return newsChannelBeanDBDao;
    }

    public PushBeanDBDao getPushBeanDBDao() {
        return pushBeanDBDao;
    }

    public VideoItemBeanDbDao getVideoItemBeanDbDao() {
        return videoItemBeanDbDao;
    }

    public ZhuantiBeanDBDao getZhuantiBeanDBDao() {
        return zhuantiBeanDBDao;
    }

    public NewsItemBeanForCollectionDao getNewsItemBeanForCollectionDao() {
        return newsItemBeanForCollectionDao;
    }

    public JsonbeanDao getJsonbeanDao() {
        return jsonbeanDao;
    }

    public NewsJumpBeanDao getNewsJumpBeanDao() {
        return newsJumpBeanDao;
    }

    public ZhuantiBeanDBDao getZhuanTiBeanDBDao() {
        return zhuanTiBeanDBDao;
    }

}
