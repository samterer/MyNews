def readPropertyFile(relativePath) {    StringReader appReader = new StringReader(file("${projectDir.getAbsolutePath()}${relativePath}").getText("utf-8"))    Properties properties = new Properties()    properties.load(appReader)    return properties}apply plugin: 'com.android.application'android {    compileSdkVersion COMPILE_SDK_VERSION as int    buildToolsVersion BUILD_TOOLS_VERSION    defaultConfig {        applicationId "com.joy.tl.news"        minSdkVersion 14        targetSdkVersion 22        versionCode 21        versionName "2.1"    }    compileOptions {        sourceCompatibility JavaVersion.VERSION_1_7        targetCompatibility JavaVersion.VERSION_1_7    }    lintOptions {        checkReleaseBuilds false        abortOnError false    }    signingConfigs {        myConfig {            Properties properties = readPropertyFile("/configs/signature.txt")            storeFile file(properties.getProperty("storeFile"))            storePassword properties.getProperty("storePassword")            keyAlias properties.getProperty("keyAlias")            keyPassword properties.getProperty("keyPassword")        }    }    buildTypes {        debug {            signingConfig signingConfigs.myConfig            proguardFile 'proguard-android.txt'        }        release {            signingConfig signingConfigs.myConfig            minifyEnabled true            proguardFile 'proguard-android.txt'        }    }    sourceSets {        main {        }    }//    productFlavors {//        colorBlue {//            versionCode 13//            versionName "1.3"//        }//    }    applicationVariants.all { variant ->        variant.outputs.each { output ->            // Change all output apk files' name, append app version name into file name            def oldSuffix = "${variant.buildType.name}.apk"            def newSuffix = "${variant.versionCode}-${variant.versionName}-${oldSuffix}"            output.outputFile = new File(output.outputFile.parentFile,                    output.outputFile.name.replace(oldSuffix, newSuffix));        }    }}repositories {    maven { url "http://dl.bintray.com/populov/maven" }    mavenCentral()}dependencies {    compile 'com.android.support:support-v4:22.2.0'    compile 'com.android.support:appcompat-v7:22.0.0'    compile 'com.android.support:recyclerview-v7:22.0.0'    compile 'com.android.support:cardview-v7:22.0.0'    compile 'com.nineoldandroids:library:2.4.0'    compile 'com.github.chrisbanes.photoview:library:1.2.3'    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'//    compile 'me.neavo:vitamio:4.2.2'    compile 'com.jiechic.library:xUtils:2.6.14'    compile 'de.greenrobot:eventbus:2.4.0'    compile 'com.loopeer.android.thirdparty:swipe-back-layout:1.0'    compile 'com.viewpagerindicator:library:2.4.1@aar'    compile 'com.alibaba:fastjson:1.2.6'    compile 'com.pnikosis:materialish-progress:1.3'    //    compile 'com.github.siyamed:android-shape-imageview:0.9.+@aar'    //    compile project(':OneKeyShare')    //    compile project(':SMSSDK')    compile project(':PullToRefreshLib')    compile project(':MySilding')    //    compile project(':ShareSDK')    compile project(':LoadMoreLib')    compile project(':CommonAnalyticsLib')    compile project(':facebook')    compile files('libs/jpush-sdk-release1.7.4.jar')    compile files('libs/umeng-analytics-v5.5.2.jar')    compile files('libs/AudienceNetwork.jar')}