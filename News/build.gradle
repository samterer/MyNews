def readPropertyFile(relativePath) {    StringReader appReader = new StringReader(file("${projectDir.getAbsolutePath()}${relativePath}").getText("utf-8"))    Properties properties = new Properties()    properties.load(appReader)    return properties}apply plugin: 'com.android.application'android {    compileSdkVersion COMPILE_SDK_VERSION as int    buildToolsVersion BUILD_TOOLS_VERSION    defaultConfig {        applicationId "com.joy.tl.news"        minSdkVersion 14        targetSdkVersion 22        versionCode 26        versionName "2.6"    }    compileOptions {        sourceCompatibility JavaVersion.VERSION_1_7        targetCompatibility JavaVersion.VERSION_1_7        android.enforceUniquePackageName = false    }    lintOptions {        checkReleaseBuilds false        abortOnError false    }    signingConfigs {        myConfig {            Properties properties = readPropertyFile("/configs/signature.txt")            storeFile file(properties.getProperty("storeFile"))            storePassword properties.getProperty("storePassword")            keyAlias properties.getProperty("keyAlias")            keyPassword properties.getProperty("keyPassword")        }    }    buildTypes {        debug {            signingConfig signingConfigs.myConfig            proguardFile 'proguard-android.txt'        }        release {            signingConfig signingConfigs.myConfig            minifyEnabled true            proguardFile 'proguard-android.txt'        }    }    sourceSets {        main {        }    }    productFlavors {        google {        }        rom {            applicationId "com.joy.tl.news.rom"            versionCode 100            versionName "100"        }    }    applicationVariants.all { variant ->        variant.outputs.each { output ->            // Change all output apk files' name, append app version name into file name            def oldSuffix = "${variant.buildType.name}.apk"            def newSuffix = "${variant.versionCode}-${variant.versionName}-${oldSuffix}"            output.outputFile = new File(output.outputFile.parentFile,                    output.outputFile.name.replace(oldSuffix, newSuffix));        }    }}repositories {    maven { url "http://dl.bintray.com/populov/maven" }    mavenCentral()}dependencies {    compile 'com.android.support:support-v4:22+'    compile 'com.android.support:appcompat-v7:22+'    compile 'com.android.support:recyclerview-v7:22+'    compile 'com.android.support:cardview-v7:22+'    compile 'com.nineoldandroids:library:2.+'    compile 'com.github.chrisbanes.photoview:library:1.+'    compile 'com.nostra13.universalimageloader:universal-image-loader:1.+'    compile 'com.squareup.okhttp:okhttp:2.+'    compile 'de.greenrobot:greendao:2.+'    compile 'de.greenrobot:eventbus:2.+'    compile 'com.loopeer.android.thirdparty:swipe-back-layout:1.0'    compile 'com.alibaba:fastjson:1.+'    compile 'com.pnikosis:materialish-progress:1.3'    compile 'com.melnykov:floatingactionbutton:1.3+'    compile 'com.facebook.android:facebook-android-sdk:4.+'    compile 'com.facebook.android:audience-network-sdk:4.+'    compile 'com.viewpagerindicator:library:2.4.1@aar'    compile 'com.jiechic.library:xUtils:2.6.14'    compile project(':PullToRefreshLib')    compile project(':MySilding')    compile project(':LoadMoreLib')    compile project(':CommonAnalyticsLib')    compile files('libs/jpush-android-2.0.5.jar')    // 检查内存泄漏    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'}